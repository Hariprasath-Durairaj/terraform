trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  workingDirectory: 'env/QA'
  backendResourceGroup: 'dhdp-lab-resource-group'
  backendStorageAccount: 'dhdplabsa'
  backendContainerName: 'tfstate'
  backendKey: 'qa/terraform.tfstate'

stages:
  - stage: Terraform
    displayName: 'Terraform CLI Workflow'
    jobs:
      - job: TerraformSetupPlan
        displayName: 'Terraform Init, Validate, Plan'
        steps:
          - checkout: self

          - task: Bash@3
            displayName: 'Install Terraform 1.5.7'
            inputs:
              targetType: 'inline'
              script: |
                curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
                unzip terraform.zip
                sudo mv terraform /usr/local/bin/
                terraform -version

          - script: |
              terraform init                 -backend-config="resource_group_name=$(backendResourceGroup)"                 -backend-config="storage_account_name=$(backendStorageAccount)"                 -backend-config="container_name=$(backendContainerName)"                 -backend-config="key=$(backendKey)"
            workingDirectory: $(workingDirectory)
            displayName: 'Terraform Init'

          - script: terraform validate
            workingDirectory: $(workingDirectory)
            displayName: 'Terraform Validate'

          - script: terraform plan -out=tfplan.out
            workingDirectory: $(workingDirectory)
            displayName: 'Terraform Plan'

      - job: PreApplyApproval
        displayName: '⏸ Await Terraform Apply Approval'
        pool: server
        dependsOn: TerraformSetupPlan
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Review the Terraform plan output and approve apply to QA.'
              onTimeout: 'reject'
              timeout: '1.00:00:00'

      - job: Apply
        displayName: 'Terraform Apply'
        dependsOn: PreApplyApproval
        steps:
          - checkout: self

          - script: terraform apply -auto-approve tfplan.out
            workingDirectory: $(workingDirectory)
            displayName: 'Terraform Apply'

      - job: PreDestroyApproval
        displayName: '⏸ Await Terraform Destroy Approval'
        pool: server
        dependsOn: Apply
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Confirm you want to tear down the QA environment.'
              onTimeout: 'reject'
              timeout: '1.00:00:00'

      - job: Destroy
        displayName: 'Terraform Destroy'
        dependsOn: PreDestroyApproval
        steps:
          - checkout: self

          - script: terraform destroy -auto-approve
            workingDirectory: $(workingDirectory)
            displayName: 'Terraform Destroy'
